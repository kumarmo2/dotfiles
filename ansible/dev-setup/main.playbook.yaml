- name: Setup essentials from debian repo.
  hosts: localhost
  # become: true
  tags:
    - essentials
  tasks:
    - name: install packages
      tags: packages
      become: true
      ansible.builtin.apt:
        update_cache: true
        pkg:
         - tmux
         - vim
         - curl
         - wget
         - trash-cli
         - pkg-config
         - neofetch
         - tldr
         - build-essential
         - cmake
         - nala
         - pipx

    - name: tmux conf symlink
      ansible.builtin.file:
        path: ~/.tmux.conf
        src: ~/dotfiles/tmux/.tmux.conf
        state: link

    - name: vimrc conf symlink
      ansible.builtin.file:
        src: ~/dotfiles/.vimrc
        path: ~/.vimrc
        state: link

    - name: install rg
      tags: cargo-packages
      ansible.builtin.shell:
        cmd: cargo install ripgrep
        creates: ~/.cargo/bin/rg

    - name: create oss folders
      tags:
        - neovim
      ansible.builtin.file:
        path: ~/dev/oss
        state: directory

    - name: create dotnet directory
      ansible.builtin.file:
        path: ~/dev/dotnet
        state: directory

    - name: create js directory
      ansible.builtin.file:
        path: ~/dev/js
        state: directory


- name: Install neovim
  tags:
    - neovim
  hosts: localhost
  tasks:
    - name: Clone neovim
      ansible.builtin.git:
        repo: https://github.com/neovim/neovim.git
        dest: ~/dev/oss/neovim/

    - name: Install Dependencies
      become: true
      ansible.builtin.apt:
        update_cache: true
        pkg:
          - ninja-build
          - gettext
          - cmake 
          - unzip 
          - curl 
          - build-essential

    - name: Build
      ansible.builtin.shell:
        chdir: ~/dev/oss/neovim
        cmd: make CMAKE_BUILD_TYPE=RelWithDebInfo 
        creates: /usr/local/bin/nvim # skip this if binary is present.

    - name: Install
      become: true
      ansible.builtin.shell:
        chdir: /home/kumarmo2/dev/oss/neovim #FIXME: remove hardcoding for user in path.
        cmd: make install
        creates: /usr/local/bin/nvim

    - name: Neovim conf symlink
      ansible.builtin.file:
        path: ~/.config/nvim
        src: ~/dotfiles/nvim/
        state: link


- name: Install Terminal
  tags:
    - terminal
  hosts: localhost
  tasks:
    - name: Ensure font directory
      ansible.builtin.file:
        path: ~/.local/share/fonts
        state: directory

    - name: Copy fonts
      ansible.builtin.copy:
        src: ~/dotfiles/fonts/
        dest: ~/.local/share/fonts
      with_fileglob: "*.ttf"

    - name: Copy fonts 2
      ansible.builtin.copy:
        src: ~/dotfiles/fonts/jetbrains/
        dest: ~/.local/share/fonts
      with_fileglob: "*ttf"

    - name: Install terminal related packages from apt
      become: true
      ansible.builtin.apt:
        pkg:
          - alacritty
          - fzf
          - fd-find

    - name: Alacritty conf symlink
      ansible.builtin.file:
        src: ~/dotfiles/alacritty/
        path: ~/.config/alacritty
        state: link

    - name: Install starship
      tags: cargo-packages
      ansible.builtin.shell:
        cmd: cargo install starship
        creates: ~/.cargo/bin/starship

    - name: Install eza
      tags: cargo-packages
      ansible.builtin.shell:
        cmd: cargo install eza
        creates: ~/.cargo/bin/eza

    - name: Symlink starship conf
      ansible.builtin.file:
        src: ~/dotfiles/starship.toml
        path: ~/.config/starship.toml
        state: link
    - name: Symlink fzf script 
      ansible.builtin.file:
        src: ~/dotfiles/.fzf.bash
        path: ~/.fzf.bash
        state: link

- name: Install lazygit
  hosts: localhost
  tags: lazygit
  tasks:
    - name: Get lazygit zipped binary
      ansible.builtin.get_url:
        url: https://github.com/jesseduffield/lazygit/releases/download/v0.41.0/lazygit_0.41.0_Linux_x86_64.tar.gz
        dest: /tmp/

    - name: Extract lazygit zip
      ansible.builtin.shell:
        chdir: /tmp/
        cmd: "tar xvf lazygit_0.41.0_Linux_x86_64.tar.gz"
        creates: /tmp/lazygit

    - name: Copy lazygit
      ansible.builtin.copy:
        src: /tmp/lazygit
        dest: ~/.local/bin/
        mode: '744'

- name: Install Languages
  hosts: localhost
  tags:
    - lang
  tasks:
    - name: Install Node version manager
      ansible.builtin.shell:
        cmd: "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash"
    - name: Install Node latest LTS
      ansible.builtin.shell:
        cmd: . ~/.nvm/nvm.sh && nvm install --lts # it sources the ~/.nvm/nvm.sh and then run the install command
        creates: ~/.nvm/versions/node/v20.12.2/bin/node # TODO:  this hardcoding of the node version should be removed as the latest lts version will be changed ultimately.

- name: Install yazi
  hosts: localhost
  tags:
    - terminal
    - yazi 
  tasks:
    - name: Clone yazi
      ansible.builtin.git:
        repo: https://github.com/sxyazi/yazi.git
        dest: ~/dev/oss/yazi/

    - name: Build Yazi
      ansible.builtin.shell:
        chdir: ~/dev/oss/yazi
        cmd: cargo build --release && cp target/release/yazi  ~/.local/bin/
        creates: ~/.local/bin/yazi

    - name: Symlink yazi conf
      ansible.builtin.file:
        src: ~/dotfiles/yazi/
        path: ~/.config/yazi
        state: link






