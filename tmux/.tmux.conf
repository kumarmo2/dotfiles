# unbind ctrl-b as prefix and set ctrl-a
unbind C-b
set-option -g prefix C-a
setw -g mode-keys vi

# by default, tmux launches login-shell, and starship doesn't work in that case. This will launch shell in non-login shell.
# and starship will also work
set -g default-command "exec /bin/bash"

# For example of tmux configuration:
# https://github.com/Phantas0s/.dotfiles/blob/master/tmux/tmux.conf

# reload config
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# change the timeout
set -sg escape-time 10

# map arrow keys to home row keys.
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R


# set-option -g status-style fg="#282828",bg="#c678dd" #these are one-dark theme colors for purple and black
# setw -g mode-style bg="#C678DD",fg="#282C34"

# nvim faces colorscheme problems when opened
# inside a tmux session. this resolves that.
set-option -ga terminal-overrides ",xterm-256color:Tc"

# split vertically at the current path
bind -n M-';' split-window -h -c "#{pane_current_path}"

# split horizontally at the current path 
bind -n M-\' split-window -v -c "#{pane_current_path}"

# create new window at the current path
bind -n M-n new-window -c "#{pane_current_path}"

# kill pane Alt-x
bind -n M-x kill-pane

# open the interactive windows list
bind -n M-w find-window "" 

# detach tmux client.
bind -n M-d detach-client

# go to next window Ctrl-Alt-l
bind -n C-M-l next-window

bind -n C-M-h previous-window

# bind -n M-0 select-window -t 0

bind -n M-L resize-pane -R 2
bind -n M-H resize-pane -L 2
bind -n M-J resize-pane -D 2
bind -n M-K resize-pane -U 2

# toggles maximize pane
bind -n M-f resize-pane -Z

# since i have passed it a [shell-command], 
# the new-window in which the [shell-command] is run, will be destroyed once the shell-command ends
bind-key s new-window -n "session-switcher" "tmux list-session | fzf | cut --delimiter=":" --fields=1 | xargs tmux switch-client -t"  
bind-key o new-window -n "window-switcher" "$HOME/dotfiles/scripts/bash/tmux_fzf_same_session.sh"
bind-key p new-window -n "fuzzy-new-session" "$HOME/dotfiles/scripts/bash/tmux_fzf.sh"
bind-key g new-window -n "lg" -c "#{pane_current_path}" "lazygit"

# don't rename windows automatically
set-option -g allow-rename off

# bind Alt-s to toggle status bar.
bind -n M-s set -g status
set-option -g status-position bottom

# make vim and tmux navigation simple.[https://github.com/christoomey/vim-tmux-navigator?tab=readme-ov-file#lazynvim]
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -Z -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -Z -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -Z -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -Z -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -Z -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -Z -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# map home ALT-{h,j,k,l} for pane switching
# -Z keeps the window zoomed if it was already zoomed.
bind -n M-h select-pane -Z -L
bind -n M-l select-pane -Z -R
bind -n M-k select-pane -Z -U
bind -n M-j select-pane -Z -D

set-option -g status-interval 5
# Automatically rename the window to the current pane's path
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'


# Following are added to make yazi preview images inside tmux using ueberzugpp
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM
## Plugins 
# set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'z3z1ma/tmux-gruvbox'
set -g @gruvbox_date_time_text "%Y-%m-%d %H:%M:%S"
set -g @gruvbox_status_modules_right "application session date_time"

set -g @gruvbox_flavour 'dark'
set -g @plugin 'tmux-plugins/tpm'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

